# -*- coding: utf-8 -*-
"""assignment-anamika.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fnThQ7cO7-QPgBPHR0cdPVhTjSBkt1rU

# Game: Snake and ladder
"""

import random

class Game:
    def __init__(self):
        self.player1_position = 1
        self.player2_position = 1
        self.ladders = [{"base": 10, "top": 30}, {"base": 20, "top": 50}]
        self.snakes = [{"head": 40, "tail": 20}, {"head": 60, "tail": 30}]

    def roll_dice(self, player):
        dice_roll = random.randint(1, 6)
        print(f"Player {player} rolled a {dice_roll}")
        if player == 1:
            self.player1_position += dice_roll
        else:
            self.player2_position += dice_roll
        self.check_ladders_and_snakes(player)

    def check_ladders_and_snakes(self, player):
        if player == 1:
            position = self.player1_position
        else:
            position = self.player2_position
        for ladder in self.ladders:
            if position == ladder["base"]:
                print(f"Player {player} climbed a ladder from {position} to {ladder['top']}")
                if player == 1:
                    self.player1_position = ladder["top"]
                else:
                    self.player2_position = ladder["top"]
                return
        for snake in self.snakes:
            if position == snake["head"]:
                print(f"Player {player} slid down a snake from {position} to {snake['tail']}")
                if player == 1:
                    self.player1_position = snake["tail"]
                else:
                    self.player2_position = snake["tail"]
                return

    def get_game_state(self):
        print(f"Player 1 position: {self.player1_position}")
        print(f"Player 2 position: {self.player2_position}")

    def is_game_over(self):
        if self.player1_position >= 100:
            print("Player 1 wins!")
            return True
        elif self.player2_position >= 100:
            print("Player 2 wins!")
            return True
        return False

def play_game():
    game = Game()
    current_player = 1
    while not game.is_game_over():
        game.get_game_state()
        input(f"Press Enter to roll the dice for Player {current_player}...")
        game.roll_dice(current_player)
        current_player = 2 if current_player == 1 else 1
    game.get_game_state()

play_game()

